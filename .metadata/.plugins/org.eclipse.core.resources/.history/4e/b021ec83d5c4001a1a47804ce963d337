package algorithm.sort;

import java.util.Arrays;

/**
 * 퀵정렬(Quick Sort)
 * - 특정한 값(pivot)을 기준으로 큰 숫자와 작은 숫자를 서로 교환한 뒤에 배열을 반으로 나누는 정렬 알고리즘
 * - 분할 정복 알고리즘
 *   분할 : 정렬할 자료들을 기준값을 중심으로 2개의 부분집합으로 분할
 *   정복 : 기준보다 작은값은 왼쪽, 기준보다 큰 값은 오른쪽 부분집합으로 정렬. 부분집합의 크기가 1이하가 아니면 순환 호출을 이용하여 다시 분할함
 * - 보통 첫번째 원소를 피봇 값으로 설정.
 * - 평균시간복잡도 : O(NlogN)
 * - 최악시간복잡도 : O(N^2)
 */
public class QuickSort {
	static int[] arr = {3, 7, 8, 1, 5, 9, 6, 10, 2, 4};
	public static void main(String[] args) {
		QuickSort q = new QuickSort();
		
		q.sort(arr, arr[0], arr[9]);
		System.out.println(Arrays.toString(arr));
	}
	
	public void sort(int[] arr, int start, int end) {
		//원소가 1개인 경우
		if(start >= end) {
			return;
		}
		//기준값은 첫번째 원소
		int pi = start;
		
	}
	
	

}
